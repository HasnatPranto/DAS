// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Models;

namespace api.Migrations
{
    [DbContext(typeof(DocDBContext))]
    [Migration("20210728114217_iniDB")]
    partial class iniDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api.Models.Admin", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = "ee32b23f-bf74-46c3-b995-499e46d3dfec",
                            PasswordHash = new byte[] { 31, 222, 62, 70, 179, 220, 247, 8, 216, 129, 207, 55, 102, 137, 222, 219, 33, 117, 170, 104, 54, 25, 222, 72, 124, 210, 78, 35, 204, 249, 53, 88, 231, 205, 122, 80, 41, 117, 208, 151, 178, 195, 177, 15, 224, 21, 60, 106, 189, 51, 92, 13, 250, 32, 70, 170, 178, 118, 194, 235, 76, 132, 37, 9 },
                            PasswordSalt = new byte[] { 46, 29, 253, 247, 67, 133, 135, 81, 162, 203, 3, 96, 202, 238, 197, 50, 221, 227, 202, 70, 118, 19, 110, 109, 130, 247, 131, 255, 63, 4, 75, 48, 244, 219, 194, 157, 55, 86, 202, 222, 27, 130, 86, 169, 253, 246, 178, 69, 218, 70, 116, 216, 22, 108, 92, 50, 193, 43, 101, 135, 120, 5, 242, 202, 93, 138, 140, 24, 152, 143, 69, 243, 238, 32, 157, 232, 93, 122, 246, 81, 27, 235, 246, 38, 95, 52, 18, 49, 196, 56, 39, 217, 186, 41, 217, 182, 62, 146, 119, 246, 242, 124, 12, 88, 111, 177, 155, 99, 0, 78, 0, 30, 16, 181, 63, 187, 242, 138, 136, 37, 31, 218, 105, 210, 87, 130, 95, 9 },
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("api.Models.Appoinment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("AppoinmentDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Appoinments");
                });

            modelBuilder.Entity("api.Models.Doctor", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MedicalDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("api.Models.Schedule", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan?>("BeginTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("EndTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
