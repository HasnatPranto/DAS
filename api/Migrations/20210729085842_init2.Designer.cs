// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Models;

namespace api.Migrations
{
    [DbContext(typeof(DocDBContext))]
    [Migration("20210729085842_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api.Models.Admin", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = "ee32b23f-bf74-46c3-b995-499e46d3dfec",
                            PasswordHash = new byte[] { 221, 126, 76, 22, 64, 227, 184, 33, 244, 164, 30, 26, 81, 140, 57, 245, 32, 12, 52, 219, 148, 79, 26, 208, 41, 151, 11, 158, 88, 205, 132, 189, 185, 38, 55, 161, 161, 221, 217, 167, 127, 93, 246, 31, 231, 190, 133, 252, 235, 224, 9, 182, 71, 78, 110, 172, 158, 193, 48, 19, 249, 125, 125, 79 },
                            PasswordSalt = new byte[] { 140, 159, 9, 149, 65, 147, 250, 61, 218, 174, 27, 6, 12, 245, 25, 31, 229, 176, 140, 157, 162, 141, 253, 99, 46, 180, 108, 236, 144, 125, 107, 71, 157, 246, 18, 155, 139, 124, 159, 91, 156, 10, 12, 184, 120, 72, 131, 47, 46, 175, 146, 235, 140, 170, 66, 234, 217, 109, 123, 227, 131, 95, 221, 238, 224, 50, 102, 222, 35, 211, 144, 201, 250, 24, 101, 187, 189, 43, 65, 71, 17, 2, 238, 4, 87, 239, 119, 88, 243, 45, 250, 144, 169, 86, 247, 223, 158, 89, 83, 187, 79, 4, 87, 72, 153, 96, 228, 97, 90, 113, 12, 112, 105, 20, 42, 238, 215, 92, 116, 89, 212, 164, 181, 99, 124, 214, 31, 46 },
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("api.Models.Appoinment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("AppoinmentDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Appoinments");
                });

            modelBuilder.Entity("api.Models.Doctor", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("api.Models.Schedule", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan?>("BeginTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("EndTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
