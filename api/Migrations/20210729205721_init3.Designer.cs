// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Models;

namespace api.Migrations
{
    [DbContext(typeof(DocDBContext))]
    [Migration("20210729205721_init3")]
    partial class init3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api.Models.Admin", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = "ee32b23f-bf74-46c3-b995-499e46d3dfec",
                            PasswordHash = new byte[] { 116, 14, 159, 26, 173, 195, 1, 247, 170, 238, 143, 98, 206, 127, 231, 195, 155, 168, 190, 96, 191, 198, 211, 166, 230, 111, 250, 117, 216, 80, 167, 177, 122, 5, 181, 86, 167, 231, 62, 43, 86, 113, 127, 141, 103, 213, 11, 129, 169, 225, 74, 230, 87, 86, 92, 152, 195, 95, 231, 226, 45, 254, 54, 58 },
                            PasswordSalt = new byte[] { 210, 15, 22, 245, 179, 129, 49, 132, 224, 55, 154, 130, 172, 141, 236, 204, 11, 135, 199, 160, 72, 133, 1, 191, 13, 100, 43, 122, 199, 189, 102, 133, 164, 76, 175, 192, 237, 26, 38, 226, 41, 94, 250, 7, 9, 196, 1, 245, 132, 226, 104, 113, 152, 109, 214, 135, 100, 234, 9, 218, 251, 238, 32, 255, 154, 213, 162, 129, 25, 151, 88, 130, 213, 97, 141, 115, 247, 67, 249, 46, 194, 33, 35, 150, 146, 85, 245, 61, 235, 148, 223, 131, 27, 80, 17, 26, 92, 134, 207, 69, 32, 214, 66, 217, 90, 4, 5, 100, 125, 119, 252, 74, 125, 220, 95, 251, 172, 102, 72, 68, 180, 59, 246, 167, 79, 155, 217, 214 },
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("api.Models.Appoinment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("AppoinmentDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Appoinments");
                });

            modelBuilder.Entity("api.Models.Doctor", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("api.Models.Schedule", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan?>("BeginTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("EndTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
