// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Models;

namespace api.Migrations
{
    [DbContext(typeof(DocDBContext))]
    [Migration("20210730100047_init4")]
    partial class init4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api.Models.Admin", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = "ee32b23f-bf74-46c3-b995-499e46d3dfec",
                            PasswordHash = new byte[] { 182, 32, 32, 243, 128, 26, 59, 145, 206, 19, 252, 110, 213, 250, 26, 110, 73, 122, 202, 224, 184, 139, 131, 200, 19, 228, 212, 120, 217, 91, 161, 52, 45, 122, 102, 112, 102, 94, 152, 57, 221, 201, 206, 166, 204, 177, 119, 23, 3, 109, 202, 17, 185, 248, 29, 99, 164, 138, 251, 95, 3, 41, 191, 31 },
                            PasswordSalt = new byte[] { 148, 202, 38, 65, 212, 121, 229, 46, 34, 19, 223, 30, 45, 101, 121, 60, 34, 45, 152, 255, 27, 18, 204, 209, 169, 193, 132, 111, 251, 161, 47, 132, 9, 232, 227, 183, 0, 32, 237, 245, 101, 250, 21, 20, 88, 70, 73, 153, 168, 175, 61, 244, 124, 150, 5, 238, 20, 115, 122, 25, 250, 238, 74, 112, 232, 216, 174, 122, 136, 6, 98, 199, 77, 116, 237, 37, 16, 67, 209, 240, 89, 15, 251, 209, 106, 98, 81, 229, 99, 48, 92, 98, 156, 8, 8, 14, 74, 134, 73, 22, 117, 176, 17, 9, 101, 15, 86, 161, 191, 175, 244, 70, 99, 158, 133, 63, 89, 172, 161, 55, 130, 98, 217, 69, 173, 168, 12, 18 },
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("api.Models.Appoinment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("AppoinmentDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Appoinments");
                });

            modelBuilder.Entity("api.Models.Doctor", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("api.Models.Schedule", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan?>("BeginTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("EndTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
